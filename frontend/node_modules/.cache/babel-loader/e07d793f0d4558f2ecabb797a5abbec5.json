{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst SET_CATEGORIES = 'categories/setCategories';\n\nconst setCategories = eachCategory => {\n  return {\n    type: SET_CATEGORIES,\n    payload: eachCategory\n  };\n};\n\nexport const loadCategory = () => async dispatch => {\n  const response = await fetch('/api/category');\n  const eachCategory = await response.json;\n  dispatch(setCategories(eachCategory));\n};\n\nconst categoriesReducer = (state = [], action) => {\n  let newState;\n\n  switch (action.type) {\n    case SET_CATEGORIES:\n      newState = Object.assign({}, state);\n      newState = action.payload;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default categoriesReducer;","map":{"version":3,"sources":["/Users/jonathan/Documents/app_academy/module5/week15/day4/spade-magick-project/express-react-app/frontend/src/store/categories.js"],"names":["csrfFetch","SET_CATEGORIES","setCategories","eachCategory","type","payload","loadCategory","dispatch","response","fetch","json","categoriesReducer","state","action","newState","Object","assign"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,MAAMC,cAAc,GAAG,0BAAvB;;AAEA,MAAMC,aAAa,GAAIC,YAAD,IAAkB;AACvC,SAAO;AACNC,IAAAA,IAAI,EAAEH,cADA;AAENI,IAAAA,OAAO,EAAEF;AAFH,GAAP;AAIA,CALD;;AAOA,OAAO,MAAMG,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,CAA5B;AACA,QAAMN,YAAY,GAAG,MAAMK,QAAQ,CAACE,IAApC;AACAH,EAAAA,QAAQ,CAACL,aAAa,CAACC,YAAD,CAAd,CAAR;AACA,CAJM;;AAMP,MAAMQ,iBAAiB,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACjD,MAAIC,QAAJ;;AACA,UAAQD,MAAM,CAACT,IAAf;AACC,SAAKH,cAAL;AACCa,MAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAX;AACAE,MAAAA,QAAQ,GAAGD,MAAM,CAACR,OAAlB;AACA,aAAOS,QAAP;;AACD;AACC,aAAOF,KAAP;AANF;AAQA,CAVD;;AAYA,eAAeD,iBAAf","sourcesContent":["import { csrfFetch } from './csrf';\n\nconst SET_CATEGORIES = 'categories/setCategories';\n\nconst setCategories = (eachCategory) => {\n\treturn {\n\t\ttype: SET_CATEGORIES,\n\t\tpayload: eachCategory,\n\t};\n};\n\nexport const loadCategory = () => async (dispatch) => {\n\tconst response = await fetch('/api/category');\n\tconst eachCategory = await response.json;\n\tdispatch(setCategories(eachCategory));\n};\n\nconst categoriesReducer = (state = [], action) => {\n\tlet newState;\n\tswitch (action.type) {\n\t\tcase SET_CATEGORIES:\n\t\t\tnewState = Object.assign({}, state);\n\t\t\tnewState = action.payload;\n\t\t\treturn newState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default categoriesReducer;\n"]},"metadata":{},"sourceType":"module"}