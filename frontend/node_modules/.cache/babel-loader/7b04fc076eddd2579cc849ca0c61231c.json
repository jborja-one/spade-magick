{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = user => {\n  return {\n    type: SET_USER,\n    payload: user\n  };\n};\n\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER\n  };\n};\n\nexport const login = user => async dispatch => {\n  const {\n    credential,\n    password\n  } = user;\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nexport const signup = user => async dispatch => {\n  const {\n    username,\n    email,\n    password\n  } = user;\n  const response = await csrfFetch('/api/users', {\n    method: 'POST',\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nexport const logout = () => async dispatch => {\n  const response = await csrfFetch('/api/session', {\n    method: 'DELETE'\n  });\n  dispatch(removeUser());\n  return response;\n};\nexport const restoreUser = () => async dispatch => {\n  const response = await csrfFetch('/api/session');\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nconst initialState = {\n  user: null\n};\n\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;","map":{"version":3,"sources":["/Users/jonathan/Documents/app_academy/module5/week15/day4/spade-magick-project/express-react-app/frontend/src/store/session.js"],"names":["csrfFetch","SET_USER","REMOVE_USER","setUser","user","type","payload","removeUser","login","dispatch","credential","password","response","method","body","JSON","stringify","data","json","signup","username","email","logout","restoreUser","initialState","sessionReducer","state","action","newState","Object","assign"],"mappings":"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","sourcesContent":["import { csrfFetch } from './csrf';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => {\n\treturn {\n\t\ttype: SET_USER,\n\t\tpayload: user,\n\t};\n};\n\nconst removeUser = () => {\n\treturn {\n\t\ttype: REMOVE_USER,\n\t};\n};\n\nexport const login = (user) => async (dispatch) => {\n\tconst { credential, password } = user;\n\tconst response = await csrfFetch('/api/session', {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify({\n\t\t\tcredential,\n\t\t\tpassword,\n\t\t}),\n\t});\n\tconst data = await response.json();\n\tdispatch(setUser(data.user));\n\treturn response;\n};\n\nexport const signup = (user) => async (dispatch) => {\n\tconst { username, email, password } = user;\n\tconst response = await csrfFetch('/api/users', {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify({\n\t\t\tusername,\n\t\t\temail,\n\t\t\tpassword,\n\t\t}),\n\t});\n\tconst data = await response.json();\n\tdispatch(setUser(data.user));\n\treturn response;\n};\n\nexport const logout = () => async (dispatch) => {\n\tconst response = await csrfFetch('/api/session', {\n\t\tmethod: 'DELETE',\n\t});\n\tdispatch(removeUser());\n\treturn response;\n};\n\nexport const restoreUser = () => async (dispatch) => {\n\tconst response = await csrfFetch('/api/session');\n\tconst data = await response.json();\n\tdispatch(setUser(data.user));\n\treturn response;\n};\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n\tlet newState;\n\tswitch (action.type) {\n\t\tcase SET_USER:\n\t\t\tnewState = Object.assign({}, state);\n\t\t\tnewState.user = action.payload;\n\t\t\treturn newState;\n\t\tcase REMOVE_USER:\n\t\t\tnewState = Object.assign({}, state);\n\t\t\tnewState.user = null;\n\t\t\treturn newState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default sessionReducer;\n"]},"metadata":{},"sourceType":"module"}