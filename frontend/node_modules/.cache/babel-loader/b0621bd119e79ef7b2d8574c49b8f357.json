{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan/Documents/app_academy/module5/week15/day4/spade-magick-project/express-react-app/frontend/src/components/CreateIllusionForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport { illusionCreate } from '../../store/illusion';\nimport ProfileButton from '../Navigation/ProfileButton';\nimport logotxt from './images/logo-txt.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateIllusionForm = ({\n  isLoaded\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [image, setImage] = useState('');\n  const [description, setDescription] = useState('');\n  const [steps, setSteps] = useState('');\n  const sessionUser = useSelector(state => state.session.user);\n  let sessionLinks;\n\n  if (sessionUser) {\n    sessionLinks = /*#__PURE__*/_jsxDEV(ProfileButton, {\n      user: sessionUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }, this);\n  }\n\n  const illusion = useSelector(state => state.illusionCreate);\n  useEffect(() => {\n    dispatch(illusionCreate());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav-bar__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-bar-logo__container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"navbar-logotxt\",\n        className: \"nav-bar__logotxt\",\n        src: logotxt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"nav-bar-ul\",\n      children: [isLoaded && sessionLinks, /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-bar__link\",\n        children: \"Discover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-bar__link\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          exact: true,\n          to: \"/illusions/create\",\n          className: \"nav-bar\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CreateIllusionForm, \"YiPwoEMHi13iCr8YPwwy6y45wKA=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = CreateIllusionForm;\nexport default CreateIllusionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateIllusionForm\");","map":{"version":3,"sources":["/Users/jonathan/Documents/app_academy/module5/week15/day4/spade-magick-project/express-react-app/frontend/src/components/CreateIllusionForm/index.js"],"names":["useEffect","useState","useDispatch","useSelector","useHistory","NavLink","illusionCreate","ProfileButton","logotxt","CreateIllusionForm","isLoaded","dispatch","history","title","setTitle","image","setImage","description","setDescription","steps","setSteps","sessionUser","state","session","user","sessionLinks","illusion"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,kBAApC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,OAAO,GAAGR,UAAU,EAA1B;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMoB,WAAW,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,IAA1B,CAA/B;AAEA,MAAIC,YAAJ;;AACA,MAAIJ,WAAJ,EAAiB;AAChBI,IAAAA,YAAY,gBAAG,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEJ;AAArB;AAAA;AAAA;AAAA;AAAA,YAAf;AACA;;AAED,QAAMK,QAAQ,GAAGvB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAAChB,cAAlB,CAA5B;AACAN,EAAAA,SAAS,CAAC,MAAM;AACfW,IAAAA,QAAQ,CAACL,cAAc,EAAf,CAAR;AACA,GAFQ,EAEN,CAACK,QAAD,CAFM,CAAT;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACC;AACC,QAAA,GAAG,EAAC,gBADL;AAEC,QAAA,SAAS,EAAC,kBAFX;AAGC,QAAA,GAAG,EAAEH;AAHN;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAOC;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,iBACEE,QAAQ,IAAIe,YADd,eAEC;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,+BACC,QAAC,OAAD;AAAS,UAAA,KAAK,MAAd;AAAe,UAAA,EAAE,EAAC,mBAAlB;AAAsC,UAAA,SAAS,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAmBA,CAxCD;;GAAMhB,kB;UACYP,W,EACDE,U,EAOID,W,EAOHA,W;;;KAhBZM,kB;AA0CN,eAAeA,kBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport { illusionCreate } from '../../store/illusion';\nimport ProfileButton from '../Navigation/ProfileButton';\nimport logotxt from './images/logo-txt.png';\n\nconst CreateIllusionForm = ({ isLoaded }) => {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\n\tconst [title, setTitle] = useState('');\n\tconst [image, setImage] = useState('');\n\tconst [description, setDescription] = useState('');\n\tconst [steps, setSteps] = useState('');\n\n\tconst sessionUser = useSelector((state) => state.session.user);\n\n\tlet sessionLinks;\n\tif (sessionUser) {\n\t\tsessionLinks = <ProfileButton user={sessionUser} />;\n\t}\n\n\tconst illusion = useSelector((state) => state.illusionCreate);\n\tuseEffect(() => {\n\t\tdispatch(illusionCreate());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className='nav-bar__container'>\n\t\t\t<div className='nav-bar-logo__container'>\n\t\t\t\t<img\n\t\t\t\t\talt='navbar-logotxt'\n\t\t\t\t\tclassName='nav-bar__logotxt'\n\t\t\t\t\tsrc={logotxt}></img>\n\t\t\t</div>\n\t\t\t<ul className='nav-bar-ul'>\n\t\t\t\t{isLoaded && sessionLinks}\n\t\t\t\t<li className='nav-bar__link'>Discover</li>\n\t\t\t\t<li className='nav-bar__link'>\n\t\t\t\t\t<NavLink exact to='/illusions/create' className='nav-bar'>\n\t\t\t\t\t\tCreate\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default CreateIllusionForm;\n"]},"metadata":{},"sourceType":"module"}