{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan/Documents/app_academy/module5/week15/day4/boilerplate/express-react-app/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\nimport { restoreCSRF, csrfFetch } from './store/csrf';\nimport * as sessionActions from './store/session';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== 'production') {\n  restoreCSRF();\n  window.csrfFetch = csrfFetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  window.store = store;\n}\n\nfunction Root() {\n  return /*#__PURE__*/_jsxDEV(ReduxProvider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Root;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 2\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"sources":["/Users/jonathan/Documents/app_academy/module5/week15/day4/boilerplate/express-react-app/frontend/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","ReduxProvider","App","configureStore","restoreCSRF","csrfFetch","sessionActions","store","process","env","NODE_ENV","window","Root","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,aAA1C;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,cAAP,MAA2B,SAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,cAAvC;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;;AAEA,MAAMC,KAAK,GAAGJ,cAAc,EAA5B;;AAEA,IAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1CN,EAAAA,WAAW;AAEXO,EAAAA,MAAM,CAACN,SAAP,GAAmBA,SAAnB;AACAM,EAAAA,MAAM,CAACJ,KAAP,GAAeA,KAAf;AACAI,EAAAA,MAAM,CAACL,cAAP,GAAwBA,cAAxB;AACA;;AAED,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1CC,EAAAA,MAAM,CAACJ,KAAP,GAAeA,KAAf;AACA;;AAED,SAASK,IAAT,GAAgB;AACf,sBACC,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEL,KAAtB;AAAA,2BACC,QAAC,aAAD;AAAA,6BACC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;;KARQK,I;AAUTd,QAAQ,CAACe,MAAT,eACC,QAAC,KAAD,CAAO,UAAP;AAAA,yBACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADD,EAICC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\nimport { restoreCSRF, csrfFetch } from './store/csrf';\nimport * as sessionActions from './store/session';\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== 'production') {\n\trestoreCSRF();\n\n\twindow.csrfFetch = csrfFetch;\n\twindow.store = store;\n\twindow.sessionActions = sessionActions;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n\twindow.store = store;\n}\n\nfunction Root() {\n\treturn (\n\t\t<ReduxProvider store={store}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<App />\n\t\t\t</BrowserRouter>\n\t\t</ReduxProvider>\n\t);\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Root />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}