{"ast":null,"code":"import thunk from \"redux-thunk\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { restoreCSRF, csrfFetch } from './csrf';\nconst rootReducer = combineReducers({// add reducer functions here\n});\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  restoreCSRF();\n  window.csrfFetch = csrfFetch;\n  window.store = store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/jonathan/Documents/app_academy/module5/week15/day4/boilerplate/express-react-app/frontend/src/store/index.js"],"names":["thunk","createStore","combineReducers","applyMiddleware","compose","restoreCSRF","csrfFetch","rootReducer","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState","store"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,QAAvC;AAEA,MAAMC,WAAW,GAAGL,eAAe,CAAC,CAClC;AADkC,CAAD,CAAnC;AAIA,IAAIM,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,GAAGL,eAAe,CAACH,KAAD,CAA1B;AACD,CAFD,MAEO;AACL,QAAMY,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;AACA,QAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+Cb,OADjD;AAEAI,EAAAA,QAAQ,GAAGO,gBAAgB,CAACZ,eAAe,CAACH,KAAD,EAAQY,MAAR,CAAhB,CAA3B;AACD;;AAED,MAAMM,cAAc,GAAIC,cAAD,IAAoB;AACzC,SAAOlB,WAAW,CAACM,WAAD,EAAcY,cAAd,EAA8BX,QAA9B,CAAlB;AACD,CAFD;;AAIA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCN,EAAAA,WAAW;AAEXW,EAAAA,MAAM,CAACV,SAAP,GAAmBA,SAAnB;AACAU,EAAAA,MAAM,CAACI,KAAP,GAAeA,KAAf;AACD;;AAED,eAAeF,cAAf","sourcesContent":["import thunk from \"redux-thunk\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { restoreCSRF, csrfFetch } from './csrf';\n\nconst rootReducer = combineReducers({\n  // add reducer functions here\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  restoreCSRF();\n\n  window.csrfFetch = csrfFetch;\n  window.store = store;\n}\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}