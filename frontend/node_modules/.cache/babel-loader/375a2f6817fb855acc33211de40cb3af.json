{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan/Documents/app_academy/module5/week15/day4/spade-magick-project/frontend/src/components/ReviewForm/Review.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reviewCreate, reviewDelete, getReviews } from '../../store/reviews';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reviews() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    illusionId\n  } = useParams();\n  const reviews = useSelector(state => state.reviews);\n  const user = useSelector(state => state.session.user);\n  const illusion = useSelector(state => state.illusions);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const updateTitle = e => setTitle(e.target.value);\n\n  const updateDescription = e => setDescription(e.target.value);\n\n  const editBtn = e => {\n    e.preventDefault();\n    history.push('/reviewform');\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      reviewId: reviews.id,\n      title,\n      description,\n      userId: user.id,\n      illusionId: illusion.id\n    };\n    let updatedReviewCreate = await dispatch(reviewCreate(payload));\n\n    if (updatedReviewCreate) {\n      history.push(`/illusions/${updatedReviewCreate.id}`);\n    }\n\n    let updatedReviewDelete = await dispatch(reviewDelete(payload.reviewId));\n\n    if (updatedReviewDelete) {\n      history.push(`/categories/${updatedReviewDelete.id}`);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getReviews(illusionId));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fan Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Reviews, \"q2auvRHDQXcLfuxu3GyxhSNAxHk=\", false, function () {\n  return [useDispatch, useHistory, useParams, useSelector, useSelector, useSelector];\n});\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/Users/jonathan/Documents/app_academy/module5/week15/day4/spade-magick-project/frontend/src/components/ReviewForm/Review.js"],"names":["useEffect","useState","NavLink","useHistory","useParams","useDispatch","useSelector","reviewCreate","reviewDelete","getReviews","Reviews","dispatch","history","illusionId","reviews","state","user","session","illusion","illusions","title","setTitle","description","setDescription","updateTitle","e","target","value","updateDescription","editBtn","preventDefault","push","handleSubmit","payload","reviewId","id","userId","updatedReviewCreate","updatedReviewDelete"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,SAA9B,QAA+C,kBAA/C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,UAArC,QAAuD,qBAAvD;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAClB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAiBT,SAAS,EAAhC;AACA,QAAMU,OAAO,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;AACA,QAAME,IAAI,GAAGV,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACE,OAAN,CAAcD,IAA1B,CAAxB;AACA,QAAME,QAAQ,GAAGZ,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACI,SAAlB,CAA5B;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMuB,WAAW,GAAIC,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnC;;AACA,QAAMC,iBAAiB,GAAIH,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/C;;AAEA,QAAME,OAAO,GAAIJ,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACK,cAAF;AACAlB,IAAAA,OAAO,CAACmB,IAAR,CAAa,aAAb;AACA,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAOP,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACK,cAAF;AAEA,UAAMG,OAAO,GAAG;AACfC,MAAAA,QAAQ,EAAEpB,OAAO,CAACqB,EADH;AAEff,MAAAA,KAFe;AAGfE,MAAAA,WAHe;AAIfc,MAAAA,MAAM,EAAEpB,IAAI,CAACmB,EAJE;AAKftB,MAAAA,UAAU,EAAEK,QAAQ,CAACiB;AALN,KAAhB;AAQA,QAAIE,mBAAmB,GAAG,MAAM1B,QAAQ,CAACJ,YAAY,CAAC0B,OAAD,CAAb,CAAxC;;AACA,QAAII,mBAAJ,EAAyB;AACxBzB,MAAAA,OAAO,CAACmB,IAAR,CAAc,cAAaM,mBAAmB,CAACF,EAAG,EAAlD;AACA;;AAED,QAAIG,mBAAmB,GAAG,MAAM3B,QAAQ,CACvCH,YAAY,CAACyB,OAAO,CAACC,QAAT,CAD2B,CAAxC;;AAGA,QAAII,mBAAJ,EAAyB;AACxB1B,MAAAA,OAAO,CAACmB,IAAR,CAAc,eAAcO,mBAAmB,CAACH,EAAG,EAAnD;AACA;AACD,GAtBD;;AAwBAnC,EAAAA,SAAS,CAAC,MAAM;AACfW,IAAAA,QAAQ,CAACF,UAAU,CAACI,UAAD,CAAX,CAAR;AACA,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;AAIA,sBACC;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;;GAtDQD,O;UACSL,W,EACDF,U,EACOC,S,EACPE,W,EACHA,W,EACIA,W;;;KANTI,O;AAwDT,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reviewCreate, reviewDelete, getReviews } from '../../store/reviews';\n\nfunction Reviews() {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst { illusionId } = useParams();\n\tconst reviews = useSelector((state) => state.reviews);\n\tconst user = useSelector((state) => state.session.user);\n\tconst illusion = useSelector((state) => state.illusions);\n\n\tconst [title, setTitle] = useState('');\n\tconst [description, setDescription] = useState('');\n\n\tconst updateTitle = (e) => setTitle(e.target.value);\n\tconst updateDescription = (e) => setDescription(e.target.value);\n\n\tconst editBtn = (e) => {\n\t\te.preventDefault();\n\t\thistory.push('/reviewform');\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst payload = {\n\t\t\treviewId: reviews.id,\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\tuserId: user.id,\n\t\t\tillusionId: illusion.id,\n\t\t};\n\n\t\tlet updatedReviewCreate = await dispatch(reviewCreate(payload));\n\t\tif (updatedReviewCreate) {\n\t\t\thistory.push(`/illusions/${updatedReviewCreate.id}`);\n\t\t}\n\n\t\tlet updatedReviewDelete = await dispatch(\n\t\t\treviewDelete(payload.reviewId)\n\t\t);\n\t\tif (updatedReviewDelete) {\n\t\t\thistory.push(`/categories/${updatedReviewDelete.id}`);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdispatch(getReviews(illusionId));\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='form-container'>\n\t\t\t\t<h1>Fan Reviews</h1>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}